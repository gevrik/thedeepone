idRef {
  id: "520d6578643431040ba28a14"
}
ui_name: "or_drinkGirl"
nodes {
  idRef {
    id: "520d6583643431040ba28a1a"
  }
  index: 0
  text: "This damn machine! It never works. Now I have to call the maintenance company again..."
  branches {
    responseText: "What\'s up?"
    nextNodeIndex: 1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "520d65e6643431040ba28a1d"
  }
  index: 1
  text: "This damn machine took my Nuyen and didn\'t give me the product! It\'s the third time that this happens this week!"
  branches {
    responseText: "That\'s really bad luck if you ask me..."
    nextNodeIndex: 2
    onlyOnce: true
    idRef {
      id: "520f8f5d643431d5015d12d6"
    }
  }
  branches {
    responseText: "Let me see if I can help..."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "elevatorLevel"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 4
  }
  branches {
    responseText: "Ah, ok."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "520d6648643431040ba28a22"
  }
  index: 2
  text: "Well, I\'m not asking you... unless you can help me?"
  branches {
    responseText: "Let me see if I can help..."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "elevatorLevel"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 4
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 4
    auxiliaryLink: true
  }
  branches {
    responseText: "I couldn\'t care less..."
    nextNodeIndex: 3
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "520f8f61643431d5015d12d8"
  }
  index: 3
  text: "Pfft... Guess I have to call maintenance again! They won\'t like to hear the name Petra Smith again for the third time!"
  branches {
    responseText: "Yeah..."
    actions {
      ops {
        functionName: "Order Actor to Move To (Region)"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Target Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "520d6f2c643431040ba28da2"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "FacingDirection"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "helpedPetra"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "520d66a9643431040ba28a40"
  }
  index: 4
  text: "That would be very nice! I could really use a snack now."
  branches {
    responseText: "{{CC}}Give the machine a good shake{{/CC}}\n{{GM}}Strength: 4{{/GM}}"
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    nextNodeIndex: 5
  }
  branches {
    responseText: "{{CC}}Manipulate the machine to release the snack{{/CC}}\n{{GM}}Decking: 3{{/GM}}"
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 5
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 2
        }
      }
    }
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  branches {
    responseText: "{{CC}}Use an improvised tool to fish out the snack{{/CC}}\n{{GM}}Quickness: 4{{/GM}}"
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 3
        }
      }
    }
    nextNodeIndex: 5
    auxiliaryLink: true
  }
  branches {
    responseText: "{{CC}}Admit that you have no way of getting to the snack{{/CC}}"
    nextNodeIndex: 9
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "520d6856643431040ba28aa3"
  }
  index: 5
  text: "{{GM}}The snack bar tumbles down the shaft and into the dispenser{{/GM}}\n\nThanks! You\'re a star!\n\n{{GM}}As the girl bends to take out her snack you notice that her employee keycard falls out of her pocket{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 6
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "520d68cc643431040ba28aa6"
  }
  index: 6
  text: "{{GM}}The keycard lies on the floor{{/GM}}"
  branches {
    responseText: "{{CC}}Take the keycard{{/CC}}"
    nextNodeIndex: 7
  }
  branches {
    responseText: "{{CC}}Tell the girl that she lost her keycard{{/CC}}"
    nextNodeIndex: 8
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "520d697a643431040ba28ab9"
  }
  index: 7
  text: "{{CC}}You quickly pocket the keycard{{/CC}}"
  branches {
    responseText: "{{CC}}Leave{{/CC}}"
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "or_keycard"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "520d7053643431040ba28e24"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "helpedPetra"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Gain access to the elevator"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "relaxed"
          }
          args {
            string_value: "calm"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "elevatorLevel"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "stoleFromPetra"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "520d698b643431040ba28abb"
  }
  index: 8
  text: "Awww, you are so nice! Please don\'t tell anyone, this is the third keycard I lost this week... The boss is getting annoyed about it... My name is Petra by the way, Petra Smith. Do you work here, too?"
  branches {
    responseText: "No, don\'t worry about it."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "helpedPetra"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Region)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "520d6f2c643431040ba28da2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "relaxed"
          }
          args {
            string_value: "calm"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "returnedKeyCard"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "520d67cb643431040ba28a59"
  }
  index: 9
  text: "That\'s a shame. Guess I\'ll have to call maintenance... They will be happy to hear Petra Smith calling again...."
  branches {
    responseText: "I guess..."
    actions {
      ops {
        functionName: "Order Actor to Move To (Region)"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Target Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Region)"
            args {
              string_value: "520d6f2c643431040ba28da2"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "FacingDirection"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "helpedPetra"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: "{{GM}}The girl is seemingly upset. As you watch what she is doing, you realise that the product she ordered from the machine is stuck in its shaft.{{/GM}}"
  nextNodeIndex: 0
}
