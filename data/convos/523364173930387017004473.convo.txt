idRef {
  id: "523364173930387017004473"
}
ui_name: "ch04-vu_bouncer"
nodes {
  idRef {
    id: "523364233930387017004479"
  }
  index: 0
  text: "{{GM}}The massive troll sizes you up as you approach him. He is bald, but a pair of impressive horns surely dissuades anyone from joking about it. He grunts as you start to talk to him.{{/GM}}"
  branches {
    responseText: ""
    nextNodeIndex: 1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523364c6393038701700447f"
  }
  index: 1
  text: "I saw how you handled that thug situation over there... Not bad - you don\'t look like you belong here!"
  branches {
    responseText: "I need to get inside..."
    nextNodeIndex: 2
  }
  branches {
    responseText: "I\'m here on a job...\n{{CC}}Etiquette: Shadowrunners{{/CC}}"
    conditions {
      ops {
        functionName: "Compare Actor Skill"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorSkills"
            }
            args {
              int_value: 17
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          int_value: 0
        }
      }
    }
    nextNodeIndex: 9
  }
  branches {
    responseText: "I\'m looking for some fun..."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "accessToRooms"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 7
    auxiliaryLink: true
  }
  branches {
    responseText: "Neither do you! You look like you know your way around the Shadows."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51f4026a643431dd08e509ff"
            }
            args {
              string_value: "main_enzoHire"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 12
  }
  branches {
    responseText: "{{CC}}Attack{{/CC}}"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51f4026a643431dd08e509ff"
            }
            args {
              string_value: "main_enzoHire"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    actions {
      ops {
        functionName: "Change Actor Team"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "523330d6393038fc0a006e10"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Order Actor to Hunt And Destroy (Team)"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "523330d6393038fc0a006e10"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
    }
    nextNodeIndex: 14
  }
  branches {
    responseText: "I will talk to you later..."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523365403930387017004485"
  }
  index: 2
  text: "Club or rooms?"
  branches {
    responseText: "I want to visit the club."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "accessToClub"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 3
  }
  branches {
    responseText: "I would like a room."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "accessToRooms"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 7
  }
  branches {
    responseText: "I will think about it..."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52336587393038701700448a"
  }
  index: 3
  text: "Okay, sure - but I will check your for weapons! If I find any weapons on you I will keep them! So better make sure you stash them away now before I search you!"
  branches {
    responseText: "I do have some weapons, let me stash them away!"
    conditions {
      ops {
        functionName: "Evaluate If Actor Has Item Holstered"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "I don\'t have any weapons, you can search me!\n{{CC}}The bouncer will take away any ranged weapons you still have!!! You can keep grenades and close combat weapons hidden from him during the search!{{/CC}}"
    nextNodeIndex: 4
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523397d4393038bc10004285"
  }
  index: 4
  text: "{{GM}}The bouncer searches you and keeps any weapons he finds on you{{/GM}}"
  branches {
    responseText: "No more weapons! Can I go in now?"
    nextNodeIndex: 5
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Remove Item from Actor by Skill"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "ActorSkills"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "52339834393038bc10004288"
  }
  index: 5
  text: "Sure, what about your friend?"
  branches {
    responseText: "Rickshaw?"
    nextNodeIndex: 6
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52339c25393038bc10004545"
  }
  index: 6
  text: "I\'m keeping my weapons! I will wait at the van. Let me know if there\'s any trouble!"
  branches {
    responseText: "Will do!"
    actions {
      ops {
        functionName: "Change Actor Team"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 1
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Change Actor Control"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 1
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "PlayerOrAI"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Order Actor to Move To (Prop)"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 1
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Prop)"
            args {
              string_value: "52335b4e3930387017004208"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "FacingDirection"
            }
            args {
              int_value: 3
            }
          }
        }
      }
      ops {
        functionName: "Order Actor to become a Non-Combatant"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 1
                }
              }
            }
            args {
            }
          }
        }
      }
      ops {
        functionName: "Suspend Team\'s Turn"
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Teleport Actor"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Current Location of Prop"
            args {
              call_value {
                functionName: "Get Map Item (Prop)"
                args {
                  string_value: "5233c09a393038bc100050a5"
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "FacingDirection"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "TeleportMethod"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Teleport Camera To Actor"
        args {
          call_value {
            functionName: "Get Map Item (Player)"
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
  sourceInSceneRef {
    id: "52335adf3930387017004206"
  }
}
nodes {
  idRef {
    id: "5233668839303870170044a4"
  }
  index: 7
  text: "To get a room you must first choose a girl or boy from around the corner and pay for your time at the vending machine. I\'ll let you upstairs then!"
  branches {
    responseText: "Ok. I will be back!"
    nextNodeIndex: -1
  }
  branches {
    responseText: "I\'ve made my choice..."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "paidProst"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 8
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52336997393038701700458e"
  }
  index: 8
  text: "Cool. Have fun, chummer! Stay in your designated room, the other rooms are off-limits!"
  branches {
    responseText: "Thanks, I will go inside now!"
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "accessToRooms"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 3
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5233672b39303870170044d4"
  }
  index: 9
  text: "Hmm. Not for us... I\'ve never seen you before... What do you want?"
  branches {
    responseText: "That\'s none of your business..."
    nextNodeIndex: 10
  }
  branches {
    responseText: "Well, I would like to start working for you guys."
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "accessToClub"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 11
  }
  branches {
    responseText: "I\'ll tell you later, I have to go!"
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5233681d3930387017004548"
  }
  index: 10
  text: "That might be, but you\'re not getting inside if you don\'t tell me!"
  branches {
    responseText: "That\'s fine. See ya!"
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5233683f393038701700454b"
  }
  index: 11
  text: "Hmm, you will have to talk to Alfonso in the club if you want to get on our good side. I\'m just bouncing here."
  branches {
    responseText: "Okay, let me in then!"
    nextNodeIndex: 3
    auxiliaryLink: true
  }
  branches {
    responseText: "Thanks for the info, I will think about it!"
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52336c3d393038701700466a"
  }
  index: 12
  text: "Yes, I do run them from time to time. But this gig here is more regular money, and I don\'t have to have my limbs replaced all the time..."
  branches {
    responseText: "Are you for hire? I could use someone like you sometimes!"
    nextNodeIndex: 13
  }
  branches {
    responseText: "Interesting, thanks!"
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52336c6d393038701700466d"
  }
  index: 13
  text: "Hmm, maybe! At the moment I\'m stuck here, though. The club has been attacked by Yaks several times in the last week... and I have to keep an eye on it, almost 24/7..."
  branches {
    responseText: "So how about I help you with those Yaks and in return I can hire you for some runs in the future?"
    nextNodeIndex: 19
    auxiliaryLink: true
  }
  branches {
    responseText: "Let\'s talk about this again later!"
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "523371523930387017004869"
  }
  index: 14
  text: "Uncle Enzo pushes a button on his wristband, it must be an alarm!"
  branches {
    responseText: "{{CC}}Get ready to fight!{{/CC}}"
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "alarmActive"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Set Goal Status"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Defeat the Mafia soldiers"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_GM_Voice
}
nodes {
  idRef {
    id: "52336439393038701700447c"
  }
  index: 15
  text: "{{GM}}The massive troll sizes you up as you approach him. He is bald, but a pair of impressive horns surely dissuades anyone from joking about it. He holds out a huge arm as you approach.{{/GM}}\n\nI saw what you did with the thugs over there! We don\'t like troublemakers here, so you better slot it!"
  branches {
    responseText: "You saw what I did to them... Don\'t make me do the same to you!"
    nextNodeIndex: 16
  }
  branches {
    responseText: "Come on, they were messing with my chummer\'s van!\n{{CC}}Charisma: 4{{/CC}}"
    conditions {
      ops {
        functionName: "Compare Actor Attribute"
        args {
          call_value {
            functionName: "Triggering Actor"
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "BaseOrCurrent"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "ActorAttributes"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 3
            }
          }
        }
        args {
          int_value: 4
        }
      }
    }
    nextNodeIndex: 18
  }
  branches {
    responseText: "{{CC}}Attack{{/CC}}"
    actions {
      ops {
        functionName: "Change Actor Team"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "523330d6393038fc0a006e10"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 2
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Order Actor to Hunt And Destroy (Team)"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "523330d6393038fc0a006e10"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
    }
    nextNodeIndex: 14
    auxiliaryLink: true
  }
  branches {
    responseText: "Ok, fair enough!"
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52336929393038701700455b"
  }
  index: 16
  text: "That would be a very bad idea, $(l.sir) - this establishment is protected by the family..."
  branches {
    responseText: "The family?"
    nextNodeIndex: 17
  }
  branches {
    responseText: "I understand..."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52336950393038701700455f"
  }
  index: 17
  text: "You are even more stupid than you look! This is a mafia house, no slot and run before we use you for target practice!"
  branches {
    responseText: "Okay, I\'ll leave!"
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52336b5b393038701700462b"
  }
  index: 18
  text: "Yeah, but you didn\'t have to kill them... It\'s not like they were dangerous, like the Yaks that have been attacking the club!"
  branches {
    responseText: "How about I help you with those Yaks and you let me in?"
    nextNodeIndex: 19
  }
  branches {
    responseText: "I couldn\'t really care less. Bye!"
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "52336b9c393038701700462f"
  }
  index: 19
  text: "Hmm... Deal! They\'re a pest and have been pestering the girls and boys. They\'re too many to deal with them myselves. They usually hang out at the end of the road. Let\'s go get em!"
  branches {
    responseText: "Let\'s frag em!"
    actions {
      ops {
        functionName: "Set Goal Status"
        args {
          call_value {
            functionName: "Get Map Item (Goal)"
            args {
              string_value: "Help Uncle Enzo with the Yakuza"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "GoalStatus"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Send Event"
        args {
          call_value {
            functionName: "Get Map Item (Event)"
            args {
              string_value: "driveBy"
            }
          }
        }
      }
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51f4026a643431dd08e509ff"
            }
            args {
              string_value: "main_enzoHire"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Change Actor Team"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "523330d6393038fc0a006e10"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (string)"
            args {
              string_value: "FactionList"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (SceneDimension)"
            args {
              string_value: "Default"
            }
          }
        }
      }
      ops {
        functionName: "Change Actor Control"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "523330d6393038fc0a006e10"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "PlayerOrAI"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "I need to do something else first!"
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "causedThugTrouble"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 0
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "causedThugTrouble"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "main_enzoHire"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 15
}
