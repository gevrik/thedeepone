triggers {
  name: "onMapStart"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "52000793643431bf03b523e6"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Intruders! Kill them, my robots! Mwahahaha!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Order Actor to Call for help"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "52000793643431bf03b523e6"
              }
            }
          }
          args {
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "51ffed23643431bf03b523b4"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onKeymasterDeath"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Team Survival Percentage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 100
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "mainDoorOpen"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "behq_keycard"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You pick up the keycard on one of the dead ganger."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Add Actor Karma"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  isActive: true
  idRef {
    id: "52000b2d643431bf03b523ea"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "onCompDoorOpen"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "c716a87b306466bc09006da1"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "behq_keycard"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Find a Matrix Access Point for Annie"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Annie seems to become more alive at the sight of the Matrix workstation in this room. She produces a Cyberdeck from a hidden pouch on her back."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 5
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "51fff03f643431bf03b523ba"
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "CyberdeckExcalibur"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 2
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "PR Killer 3"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 2
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "PR Medic 3"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 2
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "PR Killjoy 2"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 2
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52000dcd643431bf03b523eb"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onAnnieMove"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "annieMove"
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Change Actor Control"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 2
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "PlayerOrAI"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 2
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to become a Non-Combatant"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 2
              }
            }
          }
          args {
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Move To (Prop)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 2
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Prop)"
          args {
            string_value: "520006ef643431bf03b523e3"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "FacingDirection"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "52001a98643431bf03b523f5"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onAnnieJacked"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "520006ef643431bf03b523e3"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Change Actor Team"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 2
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: false
  idRef {
    id: "52001bf9643431bf03b523f6"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onAnnieMatrixEnter"
  events {
    ops {
      functionName: "On Camera Region Activated"
      args {
        call_value {
          functionName: "Get Map Item (CameraRegion)"
          args {
            string_value: "51fffb98643431bf03b523dd"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Actor is Jacked in"
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "52001cf6643431bf03b523f9"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Actor\'s Persona"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 2
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52001cd6643431bf03b523f8"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onConvoEnd"
  events {
    ops {
      functionName: "On Conversation Complete"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "knowAboutAnnieNow"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "52002b5b643431bf03b526ac"
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "52002b7a643431bf03b526ad"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52002b9e643431bf03b526ae"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onHackDoor"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52000f53643431bf03b523ee"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Enable/Disable Hack Indicator On Matrix Node Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "51fff7d1643431bf03b523c0"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "mainDoorOpen"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "52000f53643431bf03b523ee"
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "51fff081643431bf03b523bf"
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "51fff02d643431bf03b523b9"
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "51fff045643431bf03b523bb"
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "51fff050643431bf03b523bd"
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "51fff04c643431bf03b523bc"
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "51fff05e643431bf03b523be"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52003311643431bf03b52719"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onAllDead"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Evaluate Team Survival Percentage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 100
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "mainDoorOpen"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add Actor Karma"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Kill all of the Brain-Eaters in this Hideout"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "BEHQcomplete"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52003aba643431bf03b52720"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "onAnnieDeath"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 2
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Don\'t let Annie die!"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 3
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5205990d643431940f7c3cb4"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onCoyoteDeath"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Don\'t let Coyote die!"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 3
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5205993f643431940f7c3cb5"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onNewTurn"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "ch02_minute"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "checkNewHour"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52084f986434312102fc4339"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "onNewHour"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "checkNewHour"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "ch02_minute"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        int_value: 60
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "ch02_minute"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "ch02_hour"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "ch02_minute"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "checkNewDay"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "520850006434312102fc433a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "onCheckNewDay"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "checkNewDay"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "ch02_hour"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 24
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "ch02_day"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "ch02_hour"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "d1_atmHacked"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5208d8b8643431790313c39a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "onModPickup"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "521ed0b5393038cc0b004d0b"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "randomMod"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            int_value: 2
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "checkMod1"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "521ed0b5393038cc0b004d0b"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "521ea4bd3930387007000f62"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "onCheckMod1"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "checkMod1"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "randomMod"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "mods_weapon"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You have found a weapon module!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "521ea54d3930387007000f63"
  }
  elseActions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "checkMod2"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "onCheckMod2"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "checkMod2"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "randomMod"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "mods_armor"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You have found an armor module!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "521ea5993930387007000f64"
  }
  elseActions {
  }
  is_oneshot: false
}
regions {
  name: "meatspace"
  position {
    x: -28
    y: 9
    width: 48
    height: 59
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "51ffecba643431bf03b523b0"
  }
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.26666668
    g: 0.26666668
    b: 0.26666668
    a: 1
  }
  ambience_template: ""
  combat_music: "Seattle-Set7-Combat"
  default_music: "Seattle-Set6-Ominous"
  loop_combat_music: true
  loop_default_music: true
}
regions {
  name: "matrix"
  position {
    x: -90
    y: -36
    width: 20
    height: 40
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "51fffb98643431bf03b523dd"
  }
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: "Seattle-Set9-Combat"
  default_music: "Seattle-Set8-MatrixLoop"
  loop_combat_music: true
  loop_default_music: true
}
regions {
  name: "annieAlive!"
  position {
    x: -82
    y: 0
    width: 4
    height: 4
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "52001cb9643431bf03b523f7"
  }
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 14
    y: 0
    z: 31
  }
  orientation: ORIENTATION_E
  idRef {
    id: "51ffed0a643431bf03b523b3"
  }
  lod: 0
  character_instance {
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 0
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 8
    y: 0
    z: 30
  }
  orientation: ORIENTATION_N
  idRef {
    id: "51ffefa4643431bf03b523b6"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/OrkFemale"
    character_sheet_id: "Brain-Eaters Controller"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
    }
    equipment {
      prefab_name: "DroneRepairKit_hi"
    }
    equipment {
      prefab_name: "DeckerFedora"
    }
    equipment {
      prefab_name: "DroneRepairKit_hi"
    }
    equipment {
      prefab_name: "DroneSupportS_Wolfhound"
    }
    equipment {
      prefab_name: "Spell Heal 4"
    }
    equipment {
      prefab_name: "Pi 2 Browning Max-Power TDO"
    }
    team_id: "Gangers"
    char_name: "Brain-Eaters Controller"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    cyberware_jack: "Datajack"
    cyberware_right_leg: "Obvious Cyberleg 2"
    portrait_code_override: "s5h6"
    karma: 243
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -9
    y: 0
    z: 44
  }
  orientation: ORIENTATION_S
  GeneralTags: "hasKey"
  idRef {
    id: "51ffefc9643431bf03b523b7"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanFemale"
    character_sheet_id: "Brain-Eaters Hotshot"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
    }
    equipment {
      prefab_name: "CyberdeckExcalibur"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "DroneRepairKit_hi"
    }
    equipment {
      prefab_name: "DeckerFedora"
    }
    equipment {
      prefab_name: "AR 3 Ares Alpha TDO"
    }
    team_id: "Gangers"
    char_name: "Brain-Eaters Hotshot"
    GeneralTags: "hasKey"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait_code_override: "s6h5"
    karma: 213
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -5
    y: 0
    z: 45
  }
  orientation: ORIENTATION_S
  idRef {
    id: "51fff014643431bf03b523b8"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/DwarfMale"
    character_sheet_id: "Brain-Eaters Wizkid"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeCautious
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "DroneRepairKit_hi"
    }
    equipment {
      prefab_name: "DeckerFedora"
    }
    equipment {
      prefab_name: "DroneRepairKit_hi"
    }
    equipment {
      prefab_name: "DroneAttackS_Guardian"
    }
    equipment {
      prefab_name: "DroneAttackS_Guardian"
    }
    equipment {
      prefab_name: "Pi 1 Ceska Black Scorpion TDO"
    }
    team_id: "Gangers"
    char_name: "Brain-Eaters Wizkid"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    cyberware_jack: "Datajack"
    cyberware_right_leg: "Obvious Cyberleg 2"
    portrait_code_override: "s4h3b6"
    karma: 209
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -16
    y: 0
    z: 52
  }
  orientation: ORIENTATION_W
  displayName: "inner2"
  idRef {
    id: "51fff02d643431bf03b523b9"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanFemale"
    character_sheet_id: "Brain-Eaters Hotshot"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
    }
    equipment {
      prefab_name: "CyberdeckExcalibur"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "DroneRepairKit_hi"
    }
    equipment {
      prefab_name: "DeckerFedora"
    }
    equipment {
      prefab_name: "AR 3 Colt M23 TDO"
    }
    team_id: "Gangers"
    char_name: "Brain-Eaters Hotshot"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait_code_override: "s6h5"
    karma: 213
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -24
    y: 0
    z: 36
  }
  orientation: ORIENTATION_S
  displayName: "Spawner"
  idRef {
    id: "51fff03f643431bf03b523ba"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/OrkFemale"
    character_sheet_id: "Brain-Eaters Controller"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
    }
    equipment {
      prefab_name: "DroneRepairKit_hi"
    }
    equipment {
      prefab_name: "DeckerFedora"
    }
    equipment {
      prefab_name: "DroneRepairKit_hi"
    }
    equipment {
      prefab_name: "DroneSupportS_Wolfhound"
    }
    equipment {
      prefab_name: "Spell Heal 4"
    }
    equipment {
      prefab_name: "Pi 2 Browning Max-Power TDO"
    }
    team_id: "Gangers"
    char_name: "Brain-Eaters Controller"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    cyberware_jack: "Datajack"
    cyberware_right_leg: "Obvious Cyberleg 2"
    portrait_code_override: "s5h6"
    karma: 243
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -27
    y: 0
    z: 35
  }
  orientation: ORIENTATION_S
  displayName: "inner3"
  idRef {
    id: "51fff045643431bf03b523bb"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanFemale"
    character_sheet_id: "Lvl3_Merc_Human_CombatRigger"
    character_mod {
      stats {
        body: 3
        quickness: 4
        strength: 0
        charisma: 0
        intelligence: 3
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 1
        armor: 3
        force: 0
        morale: 10
        discipline: 0
        awareness: 5
        perception: 20
        authority: 0
        protect_tether_range: 2
        move_speed: 0
      }
      skills {
        ranged_combat: 6
        close_combat: 0
        throwing_weapons: -1
        spellcasting: 0
        decking: 5
        conjuring: 0
        spirit_summoning: 0
        drone_control: -4
        biotech: 0
        dodge: 6
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 6
        shotgun: -2
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: -3
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeCautious
    }
    equipment {
      prefab_name: "CyberdeckExcalibur"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "DroneRepairKit_hi"
    }
    equipment {
      prefab_name: "DeckerFedora"
    }
    equipment {
      prefab_name: "AR 3 Colt M23 TDO"
    }
    team_id: "Gangers"
    char_name: "Brain-Eaters Chapter Boss"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait_code_override: "s1h5"
    karma: 228
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -23
    y: 0
    z: 15
  }
  orientation: ORIENTATION_S
  displayName: "inner5"
  idRef {
    id: "51fff04c643431bf03b523bc"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanFemale"
    character_sheet_id: "Brain-Eaters Hotshot"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
    }
    equipment {
      prefab_name: "CyberdeckExcalibur"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "DroneRepairKit_hi"
    }
    equipment {
      prefab_name: "DeckerFedora"
    }
    equipment {
      prefab_name: "AR 3 Colt M23 TDO"
    }
    team_id: "Gangers"
    char_name: "Brain-Eaters Hotshot"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait_code_override: "s6h5"
    karma: 213
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -23
    y: 0
    z: 24
  }
  orientation: ORIENTATION_S
  displayName: "inner4"
  idRef {
    id: "51fff050643431bf03b523bd"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanFemale"
    character_sheet_id: "Brain-Eaters Hotshot"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
    }
    equipment {
      prefab_name: "CyberdeckExcalibur"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "DroneRepairKit_hi"
    }
    equipment {
      prefab_name: "DeckerFedora"
    }
    equipment {
      prefab_name: "AR 3 Colt M23 TDO"
    }
    team_id: "Gangers"
    char_name: "Brain-Eaters Hotshot"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait_code_override: "s6h5"
    karma: 213
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -15
    y: 0
    z: 29
  }
  orientation: ORIENTATION_E
  displayName: "inner6"
  idRef {
    id: "51fff05e643431bf03b523be"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanFemale"
    character_sheet_id: "Brain-Eaters Hotshot"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
    }
    equipment {
      prefab_name: "CyberdeckExcalibur"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "DroneRepairKit_hi"
    }
    equipment {
      prefab_name: "DeckerFedora"
    }
    equipment {
      prefab_name: "AR 3 Colt M23 TDO"
    }
    team_id: "Gangers"
    char_name: "Brain-Eaters Hotshot"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait_code_override: "s6h5"
    karma: 213
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -24
    y: 0
    z: 39
  }
  orientation: ORIENTATION_S
  displayName: "inner1"
  idRef {
    id: "51fff081643431bf03b523bf"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/DwarfMale"
    character_sheet_id: "Brain-Eaters Wizkid"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeCautious
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "DroneRepairKit_hi"
    }
    equipment {
      prefab_name: "DeckerFedora"
    }
    equipment {
      prefab_name: "DroneRepairKit_hi"
    }
    equipment {
      prefab_name: "DroneAttackS_Guardian"
    }
    equipment {
      prefab_name: "DroneAttackS_Guardian"
    }
    equipment {
      prefab_name: "Pi 1 Ceska Black Scorpion TDO"
    }
    team_id: "Gangers"
    char_name: "Brain-Eaters Wizkid"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    cyberware_jack: "Datajack"
    cyberware_right_leg: "Obvious Cyberleg 2"
    portrait_code_override: "s4h3b6"
    karma: 209
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 12
    y: 0
    z: 38
  }
  orientation: ORIENTATION_W
  displayName: "screamer"
  idRef {
    id: "52000793643431bf03b523e6"
  }
  lod: 0
  character_instance {
    prefab_name: "Standard/HumanMaleStreetSamurai"
    character_sheet_id: "Generic_Lv6_Human_Melee"
    equipment_sheet_id: "Generic_Melee_High"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
    }
    team_id: "Gangers"
    char_name: "Street Thug"
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 105
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -10
    y: 0
    z: 37
  }
  orientation: ORIENTATION_S
  idRef {
    id: "52000799643431bf03b523e7"
  }
  lod: 0
  character_instance {
    prefab_name: "Standard/HumanMaleStreetSamurai"
    character_sheet_id: "Generic_Lv6_Human_Melee"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
    }
    equipment {
      prefab_name: "Sword 2 Katana TDO"
    }
    team_id: "Gangers"
    char_name: "Street Thug"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 105
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -3
    y: 0
    z: 49
  }
  orientation: ORIENTATION_E
  idRef {
    id: "520007a1643431bf03b523e8"
  }
  lod: 0
  character_instance {
    prefab_name: "Standard/HumanMaleStreetSamurai"
    character_sheet_id: "Generic_Lv6_Human_Melee"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
    }
    equipment {
      prefab_name: "Sword 2 Katana TDO"
    }
    team_id: "Gangers"
    char_name: "Street Thug"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 105
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -80
    y: 0
    z: -34
  }
  orientation: ORIENTATION_E
  idRef {
    id: "52001418643431bf03b523f1"
  }
  lod: 0
  character_instance {
    prefab_name: "Matrix/MatrixICE_black_range"
    character_sheet_id: "IC_Lv6_Black_Ranged"
    equipment_sheet_id: "IC Black Ranged High"
    character_mod {
      stats {
        hp: 275
        morale: 24
        discipline: 24
        awareness: 24
        protect_tether_range: 5
        move_speed: 6
      }
      skills {
      }
      specializations {
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
    }
    team_id: "LoneStar"
    char_name: "Black IC"
    enabled_at_start: true
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -81
    y: 0
    z: -34
  }
  orientation: ORIENTATION_E
  idRef {
    id: "5200142a643431bf03b523f2"
  }
  lod: 0
  character_instance {
    prefab_name: "Matrix/SpiritESPShield"
    character_sheet_id: "IC_Lv6_White_Ranged"
    equipment_sheet_id: "IC White Support High"
    character_mod {
      stats {
        hp: 155
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
    }
    team_id: "LoneStar"
    char_name: "White Sentry IC"
    enabled_at_start: true
    pc_spawn_number: -1
    spawn_type: SpawnType_Matrix
    portrait {
      filename: ""
    }
    dimension_name: "Matrix"
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 3
    y: 0
    z: 27
  }
  orientation: ORIENTATION_E
  idRef {
    id: "520014ed643431bf03b523f3"
  }
  lod: 0
  character_instance {
    prefab_name: "Standard/HumanMaleStreetSamurai"
    character_sheet_id: "Generic_Lv6_Human_Melee"
    character_mod {
      stats {
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
      }
      specializations {
      }
    }
    equipment {
      prefab_name: "Sword 2 Katana TDO"
    }
    team_id: "Gangers"
    char_name: "Street Thug"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    karma: 105
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -10
    y: 0
    z: 36
  }
  orientation: ORIENTATION_S
  GeneralTags: "hasKey"
  displayName: "ambusher1"
  idRef {
    id: "52002b5b643431bf03b526ac"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanFemale"
    character_sheet_id: "Brain-Eaters Hotshot"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
    }
    equipment {
      prefab_name: "CyberdeckExcalibur"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "DroneRepairKit_hi"
    }
    equipment {
      prefab_name: "DeckerFedora"
    }
    equipment {
      prefab_name: "AR 3 Ares Alpha TDO"
    }
    team_id: "Gangers"
    char_name: "Brain-Eaters Hotshot"
    GeneralTags: "hasKey"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait_code_override: "s6h5"
    karma: 213
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -10
    y: 0
    z: 38
  }
  orientation: ORIENTATION_S
  GeneralTags: "hasKey"
  displayName: "ambusher2"
  idRef {
    id: "52002b7a643431bf03b526ad"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanFemale"
    character_sheet_id: "Brain-Eaters Hotshot"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Protect"
      attitude: AttitudeAggressive
    }
    equipment {
      prefab_name: "CyberdeckExcalibur"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "DroneRepairKit_hi"
    }
    equipment {
      prefab_name: "DeckerFedora"
    }
    equipment {
      prefab_name: "AR 3 Ares Alpha TDO"
    }
    team_id: "Gangers"
    char_name: "Brain-Eaters Hotshot"
    GeneralTags: "hasKey"
    enabled_at_start: false
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait_code_override: "s6h5"
    karma: 213
    hiring_cost_override: 1000
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 13
    y: 0
    z: 31
  }
  orientation: ORIENTATION_E
  displayName: "coyote"
  idRef {
    id: "520595f9643431320fe50a04"
  }
  lod: 0
  character_instance {
    team_id: "Shadowrunners"
    char_name: "coyote"
    enabled_at_start: true
    pc_spawn_number: 1
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 13
    y: 0
    z: 30
  }
  orientation: ORIENTATION_E
  displayName: "annie"
  idRef {
    id: "5205960c643431320fe50a05"
  }
  lod: 0
  character_instance {
    team_id: "Shadowrunners"
    char_name: "Annie"
    enabled_at_start: true
    pc_spawn_number: 2
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 14
    y: 0
    z: 30
  }
  orientation: ORIENTATION_E
  idRef {
    id: "52059618643431320fe50a06"
  }
  lod: 0
  character_instance {
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 3
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "mainDoorOpen"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "randomMod"
    typeName: "int"
  }
}
mapEvents: "annieMove"
mapEvents: "annieJacked"
mapEvents: "checkNewHour"
mapEvents: "checkNewDay"
mapEvents: "checkMod1"
mapEvents: "checkMod2"
goals {
  name: "Find a Matrix Access Point for Annie"
  type: GoalType_Primary
  status: GoalStatus_Started
}
goals {
  name: "Find a Matrix Access Point for yourself"
  type: GoalType_Secondary
  status: GoalStatus_Hidden
}
goals {
  name: "Kill all of the Brain-Eaters in this Hideout"
  type: GoalType_Secondary
  status: GoalStatus_Started
}
goals {
  name: "Don\'t die!"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Don\'t let Coyote die!"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Don\'t let Annie die!"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "BEHQ"
parentStory: ""
scene_title: "Brain-Eaters Headquarter"
scene_subtitle: "To plug-in!"
scene_synopsis: "The Headquarter is a relatively small building, but there are not that many Brain-Eaters here - mostly recruits and a few soldiers.\n\nYou didn\'t come here to wipe out the gang, though - you want to connect Annie to a Matrix Jack-In point as a final attempt at communicating with her, the only thing you need to find is the Jack-In point."
scene_image: "loadingimage_c06-s2"
scene_continue_button_skip: false
scene_restore_runner_health: false
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: true
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
scene_dimensions {
  dimension_name: "Matrix"
  initial_alarm_state: 0
  turns_per_round: 3
}
character_roster {
  roster_entries {
    reference_id: "tdo_coyote"
    hiring_conditions {
    }
    hiring_cost: -1
  }
  roster_entries {
    reference_id: "tdo_annieEvoNInv"
    hiring_conditions {
    }
    hiring_cost: -1
  }
}
show_hiring_screen_on_scene_load: true
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 3
hiring_minimum_karma: 0
hiring_maximum_karma: 8
hire_from_content_pack: "51f4026a643431dd08e509ff"
roster_overrides {
}
use_hiring_cost_warning: false
hiring_average_cost: 2900
override_hiring_average_cost: true
show_equip_screen_on_scene_load: true
