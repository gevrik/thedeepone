triggers {
  name: "onMapStart"
  events {
    ops {
      functionName: "On Map Start"
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Add Camera Point of Interest (Actors)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "52121d976434318e0663962f"
              }
            }
          }
          args {
          }
        }
      }
      args {
        float_value: 3
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "52121d976434318e0663962f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "We\'ve got incoming!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Enter/Exit Cover"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "inEntrance"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnterOrExit"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Set Actor Run Speed"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "52121dbb6434318e06639630"
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "RunSpeedMethod"
          }
          args {
            int_value: 3
          }
        }
      }
    }
    ops {
      functionName: "Set Animation State Of Actor To Animation Modifier"
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "AnimationState"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "52126f8f6434312307491fbc"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (AnimationModifiers)"
          args {
            string_value: "cower"
          }
          args {
            string_value: "cower"
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "ch02_wasInMuseum"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52121e936434318e06639635"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onPatroSpot"
  events {
    ops {
      functionName: "On Actor Awareness of Another Actor"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "52121dbb6434318e06639630"
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add Camera Point of Interest (Actors)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        float_value: 3
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Intruders! Don\'t let them get to Dr. Hansen!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Set Actor Run Speed"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "RunSpeedMethod"
          }
          args {
            int_value: 2
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "All Actors With Tag"
          args {
            call_value {
              functionName: "Get Map Item (SenseTagList)"
              args {
                string_value: "inEntrance"
              }
            }
          }
          args {
            call_value {
              functionName: "Get Preset Value (int)"
              args {
                string_value: "AllOrAny"
              }
              args {
                int_value: 0
              }
            }
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "521256b26434312307491fb0"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onSpotPlayer"
  events {
    ops {
      functionName: "On Actor Awareness of Another Actor"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Cover Between Actors"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 4
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "CoverAmount"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Target Actor"
            }
          }
          args {
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Enter/Exit Cover"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnterOrExit"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "521259dc6434312307491fb3"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "onDoorOpen"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "521215836434318106188b1a"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "52126e3c6434312307491fbb"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Last Created Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Activate Actor Spawner"
      args {
        call_value {
          functionName: "Get Map Item (Actor Reference)"
          args {
            string_value: "52126e2c6434312307491fba"
          }
        }
      }
    }
    ops {
      functionName: "Order Actor to Hunt And Destroy (Team)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Last Created Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Add Camera Point of Interest (Actors)"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Actor)"
              args {
                string_value: "52126e3c6434312307491fbb"
              }
            }
          }
          args {
          }
        }
      }
      args {
        float_value: 1
      }
    }
    ops {
      functionName: "Display Text over Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "52126e3c6434312307491fbb"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        string_value: "Attack!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "More DAGON Security have arrived in the basement..."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "52126e146434312307491fb9"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onSecurityDead"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Team Survival Percentage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 100
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Goal"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Kill Dr. Hansen and his bodyguard"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add Actor Karma"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "firstWaveCleared"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52127f5e64343199074f325a"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onEncHansen"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5212856f64343199074f325d"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "521285a864343199074f325f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5212801c64343199074f325b"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Get to Dr. Hansen in Dr. Armitage\'s library"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5212858d64343199074f325e"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onDeathCoyote"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Don\'t let Coyote die!"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 3
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5212a0ab64343199074f3984"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onDeathPlayer"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Don\'t die!"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 3
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5212a0ed64343199074f3985"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onDeathCoyoteByPlayer"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Kill Coyote!"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "killedCoyote"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Actor Karma"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Talk to Dr. Hansen"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5212a10864343199074f3986"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onDeathRRBossByPlayer"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 2
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "killedRRBoss"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Add Actor Karma"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "PKilledRRBoss"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5212a1eb64343199074f3a35"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onDeathHansenByPlayer"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Goal"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Kill Dr. Hansen and his bodyguard"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Team Survival Percentage"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 100
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "killedHansen"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Kill Dr. Hansen and his bodyguard"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
    }
    ops {
      functionName: "Add Actor Karma"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Talk to Dr. Armitage"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5212a22a64343199074f3a36"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onBookTaken"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5212aa8564343199074f3c7a"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "killedCoyote"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "InvocationstoDagon"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5212aad564343199074f3c7e"
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Take the book"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Upload Armitage\'s research data"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5212aeb164343199074f3d76"
  }
  elseActions {
    ops {
      functionName: "Add Item to Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "InvocationstoDagon"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Take the book"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Leave the museum"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  is_oneshot: true
}
triggers {
  name: "onCompUsed"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5212aad564343199074f3c7e"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Start Conversation"
      args {
        call_value {
          functionName: "Get Map Item (Conversation)"
          args {
            string_value: "5212aae464343199074f3c7f"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5212aad564343199074f3c7e"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5212aef464343199074f3d78"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onRegionCompBeep"
  events {
    ops {
      functionName: "On Region Enter"
      args {
        call_value {
          functionName: "Get Map Item (Region)"
          args {
            string_value: "5212b03264343199074f3da7"
          }
        }
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "killedCoyote"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Evaluate Goal"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Leave the museum"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Play Sound"
      args {
        call_value {
          functionName: "Get Map Item (Sound)"
          args {
            string_value: "user_interface"
          }
          args {
            string_value: "BeepGeneric_Good"
          }
        }
      }
      args {
        float_value: 2
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "Dr. Armitage\'s computer beeps once..."
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "5212aad564343199074f3c7e"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5212b04664343199074f3da8"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onDeathRRBoss"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Player)"
          args {
            int_value: 2
          }
        }
      }
    }
    ops {
      functionName: "Compare Actor Team"
      args {
        call_value {
          functionName: "Triggering Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (string)"
          args {
            string_value: "FactionList"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "killedRRBoss"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5212b70164343199074f3e98"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onNewTurn"
  events {
    ops {
      functionName: "On New Round"
      args {
        call_value {
          functionName: "Get Map Item (SceneDimension)"
          args {
            string_value: "Default"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "ch02_minute"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "checkNewHour"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "52084f986434312102fc4339"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "onNewHour"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "checkNewHour"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "ch02_minute"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 3
          }
        }
      }
      args {
        int_value: 60
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "ch02_minute"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "ch02_hour"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "ch02_minute"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "checkNewDay"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "520850006434312102fc433a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "onCheckNewDay"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "checkNewDay"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "ch02_hour"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 24
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "ch02_day"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "ch02_hour"
          }
        }
      }
      args {
        int_value: 0
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "d1_atmHacked"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "5208d8b8643431790313c39a"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "onDeathArmitage"
  events {
    ops {
      functionName: "On Actor Death"
    }
  }
  conditions {
    ops {
      functionName: "Comparison (Actor)"
      args {
        call_value {
          functionName: "Triggering Target Actor"
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "52126f8f6434312307491fbc"
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Don\'t let Dr. Armitage die!"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 3
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "521784703930380005003d68"
  }
  elseActions {
  }
  is_oneshot: true
}
triggers {
  name: "onModPickup"
  events {
    ops {
      functionName: "On Item Interaction"
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "00be6384616634d41200020b"
          }
        }
      }
    }
  }
  conditions {
  }
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "randomMod"
          }
        }
      }
      args {
        call_value {
          functionName: "Random (int)"
          args {
            int_value: 1
          }
          args {
            int_value: 2
          }
        }
      }
    }
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "checkMod1"
          }
        }
      }
    }
    ops {
      functionName: "Enable/Disable Interactable Object"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "EnableOrDisable"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Map Item (InteractableObject)"
          args {
            string_value: "00be6384616634d41200020b"
          }
        }
      }
    }
  }
  isActive: true
  idRef {
    id: "521ea4bd3930387007000f62"
  }
  elseActions {
  }
  is_oneshot: false
}
triggers {
  name: "onCheckMod1"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "checkMod1"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "randomMod"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 1
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "mods_weapon"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You have found a weapon module!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "521ea54d3930387007000f63"
  }
  elseActions {
    ops {
      functionName: "Send Event"
      args {
        call_value {
          functionName: "Get Map Item (Event)"
          args {
            string_value: "checkMod2"
          }
        }
      }
    }
  }
  is_oneshot: false
}
triggers {
  name: "onCheckMod2"
  events {
    ops {
      functionName: "Get Map Item (Event)"
      args {
        string_value: "checkMod2"
      }
    }
  }
  conditions {
    ops {
      functionName: "Comparison (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "randomMod"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "Comparison Ops"
          }
          args {
            int_value: 0
          }
        }
      }
      args {
        int_value: 2
      }
    }
  }
  actions {
    ops {
      functionName: "Add To Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "51f4026a643431dd08e509ff"
          }
          args {
            string_value: "mods_armor"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Display Text at Screen Position"
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "TextPopupStyle"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        string_value: "You have found an armor module!"
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 0
      }
      args {
        float_value: 3
      }
      args {
        float_value: 3
      }
      args {
        float_value: 0
      }
    }
  }
  isActive: true
  idRef {
    id: "521ea5993930387007000f64"
  }
  elseActions {
  }
  is_oneshot: false
}
regions {
  name: "camera"
  position {
    x: -33
    y: -29
    width: 56
    height: 52
  }
  enabledAtStart: true
  is_camera_region: true
  idRef {
    id: "52098458643431fb0413cdbd"
  }
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.30980393
    g: 0.30980393
    b: 0.30980393
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "encounterHansen"
  position {
    x: -21
    y: -2
    width: 7
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5212856f64343199074f325d"
  }
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
regions {
  name: "annieOnComp"
  position {
    x: -20
    y: 2
    width: 5
    height: 2
  }
  enabledAtStart: true
  is_camera_region: false
  idRef {
    id: "5212b03264343199074f3da7"
  }
  directional_light_dir {
    x: -0.5
    y: -1
    z: -0.75
  }
  directional_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambient_light_color {
    r: 0.50196081
    g: 0.50196081
    b: 0.50196081
    a: 1
  }
  ambience_template: ""
  combat_music: ""
  default_music: ""
  loop_combat_music: true
  loop_default_music: false
}
patrolRoutes {
  name: "guard"
  pathType: 0
  nodes {
    position {
      x: 0
      z: 17
    }
    index: 0
  }
  nodes {
    position {
      x: 0
      z: 9
    }
    index: 1
  }
  can_move_beyond_node: true
  idRef {
    id: "521256716434312307491faf"
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 11
    y: 0
    z: -12
  }
  orientation: ORIENTATION_N
  idRef {
    id: "52098537643431fb0413cdbe"
  }
  lod: 0
  character_instance {
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 0
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 11
    y: 0
    z: 10
  }
  orientation: ORIENTATION_N
  GeneralTags: "inEntrance"
  displayName: "dagonEliteBGRifle1"
  idRef {
    id: "521217046434318106188b1d"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanMale"
    character_sheet_id: "Lonestar_Lv6_Captain"
    equipment_sheet_id: "tdo_dagonRifler"
    character_mod {
      stats {
        body: 3
        quickness: 1
        strength: 1
        charisma: 1
        intelligence: 1
        willpower: 1
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 1
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 1
        close_combat: 0
        throwing_weapons: 1
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 1
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 1
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeCautious
    }
    team_id: "LoneStar"
    char_name: "DAGON Elite Guard"
    GeneralTags: "inEntrance"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    portrait_code_override: "s1h2c5b6c5"
    karma: 179
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 9
    y: 0
    z: -4
  }
  orientation: ORIENTATION_N
  GeneralTags: "inEntrance"
  displayName: "dagonEliteBGMage2"
  idRef {
    id: "5212188e6434318106188c6f"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanFemale"
    character_sheet_id: "Lonestar_Lv6_Human_Mage"
    character_mod {
      stats {
        body: 4
        quickness: 1
        strength: 1
        charisma: 1
        intelligence: 1
        willpower: 1
        essence: 0
        magic: 0
        hp: 0
        ap: 2
        armor: 1
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 1
        close_combat: 0
        throwing_weapons: 1
        spellcasting: 2
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 1
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 1
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "Spell Powerbolt 3"
    }
    equipment {
      prefab_name: "Spell Heal Wound"
    }
    equipment {
      prefab_name: "Spell Ball Lightning 2"
    }
    equipment {
      prefab_name: "MageSlick"
    }
    equipment {
      prefab_name: "DeepGaze"
    }
    team_id: "LoneStar"
    char_name: "DAGON Elite Guard"
    GeneralTags: "inEntrance"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    portrait_code_override: "s4h3c4"
    karma: 182
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 11
    y: 0
    z: -13
  }
  orientation: ORIENTATION_N
  idRef {
    id: "52121bb56434318e0663962e"
  }
  lod: 0
  character_instance {
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 1
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -5
    y: 0
    z: -9
  }
  orientation: ORIENTATION_S
  GeneralTags: "inEntrance"
  displayName: "dagonEliteBGRifle2"
  idRef {
    id: "52121d976434318e0663962f"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanMale"
    character_sheet_id: "Lonestar_Lv6_Captain"
    character_mod {
      stats {
        body: 3
        quickness: 1
        strength: 1
        charisma: 1
        intelligence: 1
        willpower: 1
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 1
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 1
        close_combat: 0
        throwing_weapons: 1
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 1
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 1
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeCautious
    }
    equipment {
      prefab_name: "Grenade 3 (Frag)"
    }
    equipment {
      prefab_name: "Grenade 3 (Flash)"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "SamuraiTrenchcoat"
    }
    equipment {
      prefab_name: "AR 3 Colt M23 TDO"
    }
    team_id: "LoneStar"
    char_name: "DAGON Elite Guard"
    GeneralTags: "inEntrance"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    portrait_code_override: "s2h1c2"
    karma: 179
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 0
    y: 0
    z: 18
  }
  orientation: ORIENTATION_W
  GeneralTags: "inEntrance"
  displayName: "dagonEliteBGMage1"
  idRef {
    id: "52121dbb6434318e06639630"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanFemale"
    character_sheet_id: "Lonestar_Lv6_Human_Mage"
    character_mod {
      stats {
        body: 4
        quickness: 1
        strength: 1
        charisma: 1
        intelligence: 1
        willpower: 1
        essence: 0
        magic: 0
        hp: 0
        ap: 2
        armor: 1
        force: 0
        morale: 0
        discipline: 0
        awareness: 24
        perception: 20
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 1
        close_combat: 0
        throwing_weapons: 1
        spellcasting: 2
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 1
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 1
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "Spell Powerbolt 3"
    }
    equipment {
      prefab_name: "Spell Heal Wound"
    }
    equipment {
      prefab_name: "Spell Ball Lightning 2"
    }
    equipment {
      prefab_name: "MageSlick"
    }
    equipment {
      prefab_name: "DeepGaze"
    }
    team_id: "LoneStar"
    char_name: "DAGON Elite Guard"
    GeneralTags: "inEntrance"
    patrolRoute: "guard"
    enabled_at_start: true
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: ""
    }
    portrait_code_override: "s4h3c4"
    karma: 182
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -19
    y: 0
    z: 2
  }
  orientation: ORIENTATION_E
  GeneralTags: "secRoom"
  displayName: "dagonEliteBGMage3"
  idRef {
    id: "52121e2e6434318e06639632"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanFemale"
    character_sheet_id: "Lonestar_Lv6_Human_Mage"
    character_mod {
      stats {
        body: 4
        quickness: 1
        strength: 1
        charisma: 1
        intelligence: 1
        willpower: 1
        essence: 0
        magic: 0
        hp: 0
        ap: 2
        armor: 1
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 1
        close_combat: 0
        throwing_weapons: 1
        spellcasting: 2
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 1
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 1
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "Spell Powerbolt 3"
    }
    equipment {
      prefab_name: "Spell Heal Wound"
    }
    equipment {
      prefab_name: "Spell Ball Lightning 2"
    }
    equipment {
      prefab_name: "MageSlick"
    }
    equipment {
      prefab_name: "DeepGaze"
    }
    team_id: "LoneStar"
    char_name: "DAGON Elite Guard"
    GeneralTags: "secRoom"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    portrait_code_override: "s4h3c4"
    karma: 182
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -23
    y: 0
    z: 6
  }
  orientation: ORIENTATION_S
  GeneralTags: "secRoom"
  displayName: "dagonEliteBGRifle3"
  idRef {
    id: "52121e326434318e06639633"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanMale"
    character_sheet_id: "Lonestar_Lv6_Captain"
    equipment_sheet_id: "tdo_dagonRifler"
    character_mod {
      stats {
        body: 3
        quickness: 1
        strength: 1
        charisma: 1
        intelligence: 1
        willpower: 1
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 1
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 1
        close_combat: 0
        throwing_weapons: 1
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 1
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 1
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeCautious
    }
    team_id: "LoneStar"
    char_name: "DAGON Elite Guard"
    GeneralTags: "secRoom"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    portrait_code_override: "s1h2c3b6c3"
    karma: 179
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -19
    y: 0
    z: 11
  }
  orientation: ORIENTATION_S
  GeneralTags: "secRoom"
  displayName: "dagonEliteBGRifle4"
  idRef {
    id: "52121e466434318e06639634"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanMale"
    character_sheet_id: "Lonestar_Lv6_Captain"
    equipment_sheet_id: "tdo_dagonRifler"
    character_mod {
      stats {
        body: 3
        quickness: 1
        strength: 1
        charisma: 1
        intelligence: 1
        willpower: 1
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 1
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 1
        close_combat: 0
        throwing_weapons: 1
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 1
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 1
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeCautious
    }
    team_id: "LoneStar"
    char_name: "DAGON Elite Guard"
    GeneralTags: "secRoom"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    portrait_code_override: "s2h6c1b2c1"
    karma: 179
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -4
    y: 0
    z: 12
  }
  orientation: ORIENTATION_S
  GeneralTags: "inEntrance"
  displayName: "dagonEliteBGRifle5"
  idRef {
    id: "521266a36434312307491fb6"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanMale"
    character_sheet_id: "Lonestar_Lv6_Captain"
    equipment_sheet_id: "tdo_dagonRifler"
    character_mod {
      stats {
        body: 3
        quickness: 1
        strength: 1
        charisma: 1
        intelligence: 1
        willpower: 1
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 1
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 1
        close_combat: 0
        throwing_weapons: 1
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 1
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 1
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeCautious
    }
    team_id: "LoneStar"
    char_name: "DAGON Elite Guard"
    GeneralTags: "inEntrance"
    enabled_at_start: true
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    portrait_code_override: "s1h2c5b6c5"
    karma: 179
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -20
    y: 0
    z: -11
  }
  orientation: ORIENTATION_E
  displayName: "hansenPBG"
  idRef {
    id: "521266a86434312307491fb7"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanFemale"
    character_sheet_id: "Lonestar_Lv6_Captain"
    character_mod {
      stats {
        body: 3
        quickness: 3
        strength: 1
        charisma: 1
        intelligence: 1
        willpower: 1
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 6
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 3
        close_combat: 0
        throwing_weapons: 1
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 1
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: -2
        shotgun: 0
        smg: 6
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeBoss
    }
    equipment {
      prefab_name: "Grenade 3 (Flash)"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "RiggerTrenchcoat"
    }
    equipment {
      prefab_name: "SMG 3 HK HK227 TDO"
    }
    team_id: "Civilians"
    char_name: "Personal Bodyguard"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "human_female_weapons-spec-2"
    }
    portrait_code_override: "s1h1c3"
    karma: 228
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 1
    y: 0
    z: -13
  }
  orientation: ORIENTATION_E
  GeneralTags: "inEntrance"
  displayName: "dagonEliteBGRifle6"
  idRef {
    id: "52126e2c6434312307491fba"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanMale"
    character_sheet_id: "Lonestar_Lv6_Captain"
    character_mod {
      stats {
        body: 3
        quickness: 1
        strength: 1
        charisma: 1
        intelligence: 1
        willpower: 1
        essence: 0
        magic: 0
        hp: 0
        ap: 1
        armor: 1
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 1
        close_combat: 0
        throwing_weapons: 1
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 1
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 1
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeCautious
    }
    equipment {
      prefab_name: "Grenade 3 (Frag)"
    }
    equipment {
      prefab_name: "Grenade 3 (Flash)"
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "SamuraiTrenchcoat"
    }
    equipment {
      prefab_name: "AR 3 Colt M23 TDO"
    }
    team_id: "LoneStar"
    char_name: "DAGON Elite Guard"
    GeneralTags: "inEntrance"
    enabled_at_start: false
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    portrait_code_override: "s1h2c5b6c5"
    karma: 179
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: 9
    y: 0
    z: -13
  }
  orientation: ORIENTATION_E
  GeneralTags: "inEntrance"
  displayName: "dagonEliteBGMage4"
  idRef {
    id: "52126e3c6434312307491fbb"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanFemale"
    character_sheet_id: "Lonestar_Lv6_Human_Mage"
    character_mod {
      stats {
        body: 4
        quickness: 1
        strength: 1
        charisma: 1
        intelligence: 1
        willpower: 1
        essence: 0
        magic: 0
        hp: 0
        ap: 2
        armor: 1
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 1
        close_combat: 0
        throwing_weapons: 1
        spellcasting: 2
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 1
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 1
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Guard - Seek And Destroy"
      attitude: AttitudeAggressive
    }
    equipment {
      prefab_name: "HealthPack_hi"
    }
    equipment {
      prefab_name: "Spell Powerbolt 3"
    }
    equipment {
      prefab_name: "Spell Heal Wound"
    }
    equipment {
      prefab_name: "Spell Ball Lightning 2"
    }
    equipment {
      prefab_name: "MageSlick"
    }
    equipment {
      prefab_name: "DeepGaze"
    }
    team_id: "LoneStar"
    char_name: "DAGON Elite Guard"
    GeneralTags: "inEntrance"
    enabled_at_start: false
    pc_spawn_number: -1
    portrait {
      filename: ""
    }
    portrait_code_override: "s4h3c4"
    karma: 182
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -15
    y: 0
    z: -12
  }
  orientation: ORIENTATION_E
  displayName: "DrArmitage"
  idRef {
    id: "52126f8f6434312307491fbc"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 1
    prerequisites {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51f4026a643431dd08e509ff"
            }
            args {
              string_value: "killedHansen"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    conversationPoint {
      conversationID: "5212a5d164343199074f3b08"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Core/ElfMale"
    character_sheet_id: "BaseCivilian"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeBoss
    }
    equipment {
      prefab_name: "Outfit_Scientist"
    }
    team_id: "Civilians"
    char_name: "Dr. Henry Armitage"
    pc_spawn_number: -1
    uninjurable: true
    portrait {
      filename: "npc_elfmale_holmes"
    }
    portrait_code_override: "s5"
    karma: 6
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 11
    y: 0
    z: -14
  }
  orientation: ORIENTATION_N
  idRef {
    id: "5212758c64343199074f3259"
  }
  lod: 0
  character_instance {
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 2
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -16
    y: 0
    z: -10
  }
  orientation: ORIENTATION_E
  displayName: "drHansen"
  idRef {
    id: "5212801c64343199074f325b"
  }
  interactionRoot {
    isEnabled: true
    interactionRadius: 3
    prerequisites {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Story Variable (bool)"
            args {
              string_value: "51f4026a643431dd08e509ff"
            }
            args {
              string_value: "killedCoyote"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    conversationPoint {
      conversationID: "5212a32764343199074f3a37"
      turnToFace: true
    }
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanMale"
    character_sheet_id: "Boss_Jessica_c21"
    character_mod {
      stats {
        body: 0
        quickness: 0
        strength: 0
        charisma: 0
        intelligence: 0
        willpower: 0
        essence: 0
        magic: 0
        hp: 0
        ap: 0
        armor: 0
        force: 0
        morale: 0
        discipline: 0
        awareness: 0
        perception: 0
        authority: 0
        protect_tether_range: 0
        move_speed: 0
      }
      skills {
        ranged_combat: 0
        close_combat: 0
        throwing_weapons: 0
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 0
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 0
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
    }
    equipment {
      prefab_name: "Spell Powerbolt 3"
    }
    equipment {
      prefab_name: "DeepGaze"
    }
    equipment {
      prefab_name: "Spell Acid Stream 2"
    }
    equipment {
      prefab_name: "Spell Stunball 1"
    }
    equipment {
      prefab_name: "MageSlick"
    }
    equipment {
      prefab_name: "Spell Heal 3"
    }
    team_id: "Civilians"
    char_name: "Dr. Alexander Hansen"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    portrait {
      filename: "backer_humanmale_rc"
    }
    portrait_code_override: "s5"
    karma: 278
    hiring_cost_override: 1000
  }
}
characters {
  name: "chars_icon_playerIcon"
  gridPoint {
    x: -46
    y: 0
    z: -10
  }
  orientation: ORIENTATION_S
  idRef {
    id: "5212abae64343199074f3c9e"
  }
  lod: 0
  character_instance {
    prefab_name: "Core/HumanFemale"
    character_sheet_id: "Generic_Lv6_Human_Melee"
    character_mod {
      stats {
        body: -1
        quickness: 3
        strength: -3
        charisma: 0
        intelligence: 14
        willpower: -1
        essence: 0
        magic: 0
        hp: 0
        ap: 1
        armor: 0
        force: 0
        morale: 24
        discipline: 0
        awareness: 24
        perception: -20
        authority: 0
        protect_tether_range: 5
        move_speed: 0
        is_fearless: 1
      }
      skills {
        ranged_combat: -2
        close_combat: 5
        throwing_weapons: -4
        spellcasting: 0
        decking: 0
        conjuring: 0
        spirit_summoning: 0
        drone_control: 0
        biotech: 0
        dodge: 3
        etiquette_corporate: 0
        etiquette_security: 0
        etiquette_gang: 0
        etiquette_socialite: 0
        chi_casting: 0
        etiquette_shadowrunner: 0
        etiquette_street: 0
        etiquette_academic: 0
      }
      specializations {
        pistol: 0
        rifle: 0
        shotgun: 0
        smg: 0
        edged: 6
        unarmed: 0
        spirit_control: 0
        esp_control: 0
        drone_combat: 0
      }
      archetypeName: "Non-Combatant"
      attitude: AttitudeCautious
      attackRandom: AttackStyle_BestOnly
    }
    equipment {
      prefab_name: "CyberdeckExcalibur"
    }
    equipment {
      prefab_name: "DroneSupportS_Wolfhound"
    }
    equipment {
      prefab_name: "DroneSupportB_RoboDoc"
    }
    equipment {
      prefab_name: "RiggerHawaiianShirt"
    }
    equipment {
      prefab_name: "Sword 3 Katana"
    }
    team_id: "Civilians"
    char_name: "Annie"
    pc_spawn_number: -1
    hiring_type: HiringType_None
    cyberware_jack: "Datajack"
    portrait {
      filename: "backer_humanfemale_grahamwilliams_tsilonsiereht"
    }
    portrait_code_override: "s6h1c4"
    karma: 334
    hiring_cost_override: 1000
  }
}
characters {
  name: "system_spawner_playerSpawner"
  gridPoint {
    x: 11
    y: 0
    z: -11
  }
  orientation: ORIENTATION_N
  idRef {
    id: "521bbad2393038680f00689c"
  }
  lod: 0
  character_instance {
    team_id: "Shadowrunners"
    char_name: "New Actor"
    enabled_at_start: true
    pc_spawn_number: 3
  }
}
variables {
  bool_value: false
  variableref_value {
    scope: TsVariableScope_Scene
    name: "firstWaveCleared"
    typeName: "bool"
  }
}
variables {
  int_value: 0
  variableref_value {
    scope: TsVariableScope_Scene
    name: "randomMod"
    typeName: "int"
  }
}
mapEvents: "checkNewHour"
mapEvents: "checkNewDay"
mapEvents: "checkMod1"
mapEvents: "checkMod2"
goals {
  name: "Don\'t die!"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Don\'t let Coyote die!"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Kill Coyote!"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Kill Dr. Hansen and his bodyguard"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Get to Dr. Hansen in Dr. Armitage\'s library"
  type: GoalType_Primary
  status: GoalStatus_Started
}
goals {
  name: "Talk to Dr. Armitage"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Talk to Dr. Hansen"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Take the book"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Leave the museum"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Upload Armitage\'s research data"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
goals {
  name: "Don\'t let Dr. Armitage die!"
  type: GoalType_Primary
  status: GoalStatus_Hidden
}
worldMapLocation {
  filename: ""
  location {
    x: 0
    y: 0
  }
}
mapName: "ch02_museum"
parentStory: ""
scene_title: "Everett Museum of Literature"
scene_subtitle: "Everett Museum of Literature"
scene_synopsis: "You enter the museum through the back entrance and quickly move through the staff area towards the stairs that lead down into the basement, where Dr. Armitage is meeting with Dr. Hansen.\n\nYou have pinged Coyote about this meeting. She has agreed to help you and came up to Everett within half an hour, ready for action. She has brought backup, if you should need it.\n\nThe Boss of the Riffruffers stands beside you. He is visibly excited about being here and he grunts:\n\n\"Will you need my help on dis one?\"\n\nYou descend into the basement of the museum..."
scene_image: "loadingimage_c22-s0"
scene_continue_button_skip: false
scene_restore_runner_health: false
directional_light_dir {
  x: -0.5
  y: -1
  z: -0.75
}
directional_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
ambient_light_color {
  r: 0.50196081
  g: 0.50196081
  b: 0.50196081
}
allow_drawn_weapons: true
team_affiliations {
  team_name: "Shadowrunners"
  affiliation: 0
  affiliation: 1
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "Gangers"
  affiliation: 1
  affiliation: 0
  affiliation: 1
  affiliation: 0
}
team_affiliations {
  team_name: "LoneStar"
  affiliation: 1
  affiliation: 1
  affiliation: 0
  affiliation: 0
}
team_affiliations {
  team_name: "Civilians"
  affiliation: 0
  affiliation: 0
  affiliation: 0
  affiliation: 0
}
scene_dimensions {
  dimension_name: "Default"
}
character_roster {
  roster_entries {
    reference_id: "tdo_coyote"
    hiring_conditions {
    }
    hiring_cost: -1
  }
}
show_hiring_screen_on_scene_load: true
scene_hiring_prerequisites {
  prereq_description: ""
  prereq_conditions {
  }
}
hiring_slot_count: 3
hiring_minimum_karma: 0
hiring_maximum_karma: 8
hire_from_content_pack: "51f4026a643431dd08e509ff"
roster_overrides {
  roster_entries {
    reference_id: "tdo_bozman"
    hiring_conditions {
    }
    hiring_cost: -1
    content_pack_source: "51f4026a643431dd08e509ff"
  }
}
use_hiring_cost_warning: false
hiring_average_cost: 0
override_hiring_average_cost: false
show_equip_screen_on_scene_load: true
